------------------------------------------------
    MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
    STROBE_WIDTH ------ DATA_WIDTH/8
    LGMAXBURST ------ 5
    OPT_LINGER ------ 4
    SLAVE_ADDR ------ AXI_ADDRESSES
    OPT_LOWPOWER ------ 1
    NS ------ 8
    NM ------ 1
    ADDR_WIDTH ------ 32
    SLAVE_MASK ------ '{8{32'hf000}}
    DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
      MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
      LGNM ------ (NM>1)?$clog2(NM):1
      NMFULL ------ (NM>1)?(1<<LGNM):1
      LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
      NM ------ NM
      INTERCONNECT_ERROR ------ 2'b11
      SLAVE_ADDR ------ SLAVE_ADDR
      DATA_WIDTH ------ DATA_WIDTH
      OPT_SKID_INPUT ------ 0
      OPT_LINGER ------ OPT_LINGER
      LGMAXBURST ------ LGMAXBURST
      SLAVE_MASK ------ SLAVE_MASK
      ADDR_WIDTH ------ ADDR_WIDTH
      OPT_BUFFER_DECODER ------ 1
      OPT_LOWPOWER ------ OPT_LOWPOWER
      NS ------ NS
      LGNS ------ (NS>1)?$clog2(NS+1):1
      NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
        DATA_WIDTH ------ ADDR_WIDTH+3
        REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
        MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
        OPT_REGISTERED ------ OPT_BUFFER_DECODER
        SLAVE_MASK ------ SLAVE_MASK
        DW ------ 3
        OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
        ACCESS_ALLOWED ------ -1
        SLAVE_ADDR ------ SLAVE_ADDR
        AW ------ ADDR_WIDTH
        OPT_LOWPOWER ------ 0
        NS ------ NS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
        DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
        REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
        DATA_WIDTH ------ ADDR_WIDTH+3
        REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
        MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
        OPT_REGISTERED ------ OPT_BUFFER_DECODER
        SLAVE_MASK ------ SLAVE_MASK
        DW ------ 3
        OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
        ACCESS_ALLOWED ------ -1
        SLAVE_ADDR ------ SLAVE_ADDR
        AW ------ ADDR_WIDTH
        OPT_LOWPOWER ------ 0
        NS ------ NS
------------------------------------------------
------------------------------------------------
    MODULE: gpio INSTANCE: general_ctrls
------------------------------------------------
    ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
    ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
    OUTPUT_WIDTH ------ 16
    INPUT_WIDTH ------ 16
    BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
      MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
      REGISTERED_BUFFERS ------ 0
      INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
      N_TRIGGER_REGISTERS ------ 1
      REGISTERS_WIDTH ------ 32
      ADDRESS_MASK ------ 'hf
      N_WRITE_REGISTERS ------ 1
      TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
      N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
        DATA_WIDTH ------ 32+4
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
    MODULE: gpio INSTANCE: fault_delay_emulation
------------------------------------------------
    ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
    ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
    OUTPUT_WIDTH ------ 24
    INPUT_WIDTH ------ 1
    BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
      MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
      REGISTERED_BUFFERS ------ 0
      INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
      N_TRIGGER_REGISTERS ------ 1
      REGISTERS_WIDTH ------ 32
      ADDRESS_MASK ------ 'hf
      N_WRITE_REGISTERS ------ 1
      TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
      N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
        DATA_WIDTH ------ 32+4
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
    MODULE: SicDriveMasterTimebase INSTANCE: Timebase
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_current_tb
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_angle_tb
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_speed_tb
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
      STROBE_WIDTH ------ DATA_WIDTH/8
      LGMAXBURST ------ 5
      OPT_LINGER ------ 4
      SLAVE_ADDR ------ '{sdm_address_space::current_timebase,sdm_address_space::angle_timebase,sdm_address_space::speed_timebase}
      OPT_LOWPOWER ------ 1
      NS ------ 3
      NM ------ 1
      ADDR_WIDTH ------ 32
      SLAVE_MASK ------ '{3{32'h00f0}}
      DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
        LGNM ------ (NM>1)?$clog2(NM):1
        NMFULL ------ (NM>1)?(1<<LGNM):1
        LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
        NM ------ NM
        INTERCONNECT_ERROR ------ 2'b11
        SLAVE_ADDR ------ SLAVE_ADDR
        DATA_WIDTH ------ DATA_WIDTH
        OPT_SKID_INPUT ------ 0
        OPT_LINGER ------ OPT_LINGER
        LGMAXBURST ------ LGMAXBURST
        SLAVE_MASK ------ SLAVE_MASK
        ADDR_WIDTH ------ ADDR_WIDTH
        OPT_BUFFER_DECODER ------ 1
        OPT_LOWPOWER ------ OPT_LOWPOWER
        NS ------ NS
        LGNS ------ (NS>1)?$clog2(NS+1):1
        NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
          DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
      MODULE: enable_generator INSTANCE: current_tb
------------------------------------------------
      ADDITIONAL_BITS ------ 32-COUNTER_WIDTH
      EXTERNAL_TIMEBASE_ENABLE ------ 0
      COUNTER_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: enable_generator_counter INSTANCE: counter
------------------------------------------------
        EXTERNAL_TIMEBASE_ENABLE ------ EXTERNAL_TIMEBASE_ENABLE
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: enable_comparator INSTANCE: comparator_1
------------------------------------------------
        CLOCK_MODE ------ "FALSE"
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: enable_generator INSTANCE: angle_tb
------------------------------------------------
      ADDITIONAL_BITS ------ 32-COUNTER_WIDTH
      EXTERNAL_TIMEBASE_ENABLE ------ 0
      COUNTER_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: enable_generator_counter INSTANCE: counter
------------------------------------------------
        EXTERNAL_TIMEBASE_ENABLE ------ EXTERNAL_TIMEBASE_ENABLE
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: enable_comparator INSTANCE: comparator_1
------------------------------------------------
        CLOCK_MODE ------ "FALSE"
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: enable_generator INSTANCE: speed_tb
------------------------------------------------
      ADDITIONAL_BITS ------ 32-COUNTER_WIDTH
      EXTERNAL_TIMEBASE_ENABLE ------ 0
      COUNTER_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: enable_generator_counter INSTANCE: counter
------------------------------------------------
        EXTERNAL_TIMEBASE_ENABLE ------ EXTERNAL_TIMEBASE_ENABLE
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: enable_comparator INSTANCE: comparator_1
------------------------------------------------
        CLOCK_MODE ------ "FALSE"
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
    MODULE: SicDriveMasterSensors INSTANCE: sensor_hub
------------------------------------------------
    ENABLE_AVERAGE ------ 1
    ANGLE_SENSOR_OFFSET ------ ANGLE_SENSOR_CAL_OFFSET
    resolver_dest_angle ------ 0
    SPEED_INVERSION ------ 0
    resolver_dest_speed ------ 1
    SPEED_USER ------ 1
    SPEED_DEST ------ OMEGA_FCORE_REGISTER
    DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
    N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: internal_resolver_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: adc_post_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: adc_if_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: resolver_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
      STROBE_WIDTH ------ DATA_WIDTH/8
      LGMAXBURST ------ 5
      OPT_LINGER ------ 4
      SLAVE_ADDR ------ '{sdm_address_space::adc_spi,sdm_address_space::resolver,sdm_address_space::adc_post_proc_1,sdm_address_space::adc_post_proc_2,sdm_address_space::adc_post_proc_3,sdm_address_space::adc_post_proc_4,sdm_address_space::adc_post_proc_5,sdm_address_space::adc_post_proc_6}
      OPT_LOWPOWER ------ 1
      NS ------ 8
      NM ------ 1
      ADDR_WIDTH ------ 32
      SLAVE_MASK ------ '{8{32'hf00}}
      DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
        LGNM ------ (NM>1)?$clog2(NM):1
        NMFULL ------ (NM>1)?(1<<LGNM):1
        LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
        NM ------ NM
        INTERCONNECT_ERROR ------ 2'b11
        SLAVE_ADDR ------ SLAVE_ADDR
        DATA_WIDTH ------ DATA_WIDTH
        OPT_SKID_INPUT ------ 0
        OPT_LINGER ------ OPT_LINGER
        LGMAXBURST ------ LGMAXBURST
        SLAVE_MASK ------ SLAVE_MASK
        ADDR_WIDTH ------ ADDR_WIDTH
        OPT_BUFFER_DECODER ------ 1
        OPT_LOWPOWER ------ OPT_LOWPOWER
        NS ------ NS
        LGNS ------ (NS>1)?$clog2(NS+1):1
        NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
          DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
      MODULE: SicDriveMasterAdc INSTANCE: adcSubmodule
------------------------------------------------
      ADC_DATA_WIDTH ------ 14
      DECIMATE ------ 1
      ENABLE_AVERAGE ------ ENABLE_AVERAGE
      N_PHASES ------ N_PHASES
      DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: spi_transfer
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: SPI INSTANCE: ADC_interface
------------------------------------------------
        OUTPUT_WIDTH ------ 14
        N_CHANNELS ------ N_PHASES
        SS_POLARITY_DEFAULT ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: enable_generator_core INSTANCE: ENG
------------------------------------------------
          CLOCK_MODE ------ FALSE
          COUNTER_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: ClockGen INSTANCE: CKG
------------------------------------------------
          S2 ------ 2
          S1 ------ 1
          S0 ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: SpiRegister INSTANCE: SHR
------------------------------------------------
          serial_lsb_out_first ------ 1
          serial_msb_out_first ------ 0
          N_CHANNELS ------ N_CHANNELS
------------------------------------------------
------------------------------------------------
          MODULE: TransferEngine INSTANCE: STE
------------------------------------------------
          OUTPUT_WIDTH ------ OUTPUT_WIDTH
          N_CHANNELS ------ N_CHANNELS
------------------------------------------------
------------------------------------------------
          MODULE: SpiControlUnit INSTANCE: SCU
------------------------------------------------
          INITIAL_REGISTER_VALUES ------ {VARIABLE_INITIAL_VALUES,FIXED_REGISTER_VALUES}
          VARIABLE_INITIAL_VALUES ------ '{N_CHANNELS{1'b0}}
          FIXED_REGISTER_VALUES ------ '{0,0,1,{SS_POLARITY_DEFAULT,3'b0,SS_POLARITY_DEFAULT,5'b0,4'hE,4'b0}}
          TRIGGER_REGISTERS_IDX ------ '{3}
          N_REGISTERS ------ 4+N_CHANNELS
          OUTPUT_WIDTH ------ OUTPUT_WIDTH
          N_CHANNELS ------ N_CHANNELS
          SS_POLARITY_DEFAULT ------ SS_POLARITY_DEFAULT
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: axi_if
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_REGISTER_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ N_REGISTERS
            TRIGGER_REGISTERS_IDX ------ TRIGGER_REGISTERS_IDX
            N_READ_REGISTERS ------ N_REGISTERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: processed_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: processing_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: AdcProcessing INSTANCE: ADC_post_processor
------------------------------------------------
        N_CHANNELS ------ 4
        MAX_FILTER_TAPS ------ 256
        OUTPUT_SIGNED ------ {N_CHANNELS{1'b1}}
        LINEARIZER_GAINS ------ '{default:0}
        DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
        FLTER_TAP_WIDTH ------ 16
        FILTER_WORKING_WIDTH ------ DATA_PATH_WIDTH>FLTER_TAP_WIDTH?DATA_PATH_WIDTH:FLTER_TAP_WIDTH
        DECIMATED ------ DECIMATE
        FILTER_TAPS ------ '{MAX_FILTER_TAPS+1{0}}
        ENABLE_AVERAGE ------ ENABLE_AVERAGE
        AVERAGING_DIVISOR ------ 2
        STICKY_FAULT ------ 0
        LINEARIZER_BOUNDS ------ '{default:0}
        LINEARIZER_SEGMENTS ------ 4
------------------------------------------------
------------------------------------------------
          MODULE: AdcProcessingControlUnit INSTANCE: AdcCU
------------------------------------------------
          IV ------ {ZERO_IV,COMPARE_IV}
          ZERO_IV ------ '{N_ZERO_IV{32'h0}}
          TAP_ADDR_REG ------ N_CHANNELS+N_COMPARE_REGS+N_SHIFT_REGS+2
          N_REGISTERS ------ N_CHANNELS+N_COMPARE_REGS+N_SHIFT_REGS+3
          N_COMPARE_REGS ------ 4
          N_SHIFT_REGS ------ N_CHANNELS/8+1
          N_CHANNELS ------ N_CHANNELS
          FLTER_TAP_WIDTH ------ FLTER_TAP_WIDTH
          DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
          COMPARE_IV ------ '{N_COMPARE_REGS{32'hffff0000}}
          N_ZERO_IV ------ N_REGISTERS-N_COMPARE_REGS
          STICKY_FAULT ------ STICKY_FAULT
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ IV
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'hff
            N_WRITE_REGISTERS ------ N_REGISTERS
            TRIGGER_REGISTERS_IDX ------ '{TAP_ADDR_REG}
            N_READ_REGISTERS ------ N_REGISTERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: comparator INSTANCE: fast_cmp
------------------------------------------------
          DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: cal_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: calibration INSTANCE: calibrator
------------------------------------------------
          OUTPUT_SIGNED ------ OUTPUT_SIGNED
          N_CHANNELS ------ N_CHANNELS
          DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: saturating_adder INSTANCE: offset_adder
------------------------------------------------
            DATA_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: lin_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: linearizer INSTANCE: linearizer
------------------------------------------------
          GAINS ------ LINEARIZER_GAINS
          BOUNDS ------ LINEARIZER_BOUNDS
          N_CHANNELS ------ N_CHANNELS
          N_SEGMENTS ------ LINEARIZER_SEGMENTS
          DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: standard_decimator INSTANCE: dec
------------------------------------------------
          N_CHANNELS ------ N_CHANNELS
          AVERAGING_DIVISOR ------ AVERAGING_DIVISOR
          AVERAGING ------ ENABLE_AVERAGE
          DATA_WIDTH ------ DATA_PATH_WIDTH
          MAX_DECIMATION_RATIO ------ 16
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: raw_filtered_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: fir_filter_serial INSTANCE: filter
------------------------------------------------
          TAPS_IV ------ FILTER_TAPS
          MAX_N_TAPS ------ MAX_FILTER_TAPS
          WORKING_WIDTH ------ DATA_PATH_WIDTH>TAP_WIDTH?DATA_PATH_WIDTH:TAP_WIDTH
          TAP_WIDTH ------ FLTER_TAP_WIDTH
          DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: DP_RAM INSTANCE: tap_memory
------------------------------------------------
            INIT_LEN ------ MAX_N_TAPS+1
            ADDR_WIDTH ------ $clog2(MAX_N_TAPS)
            MEM_INIT ------ TAPS_IV
            DATA_WIDTH ------ WORKING_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: DP_RAM INSTANCE: dl
------------------------------------------------
            INIT_LEN ------ 1
            ADDR_WIDTH ------ $clog2(MAX_N_TAPS)
            MEM_INIT ------ '{INIT_LEN{0}}
            DATA_WIDTH ------ WORKING_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: standard_decimator INSTANCE: dec
------------------------------------------------
          N_CHANNELS ------ N_CHANNELS
          AVERAGING_DIVISOR ------ 2
          AVERAGING ------ 0
          DATA_WIDTH ------ DATA_PATH_WIDTH
          MAX_DECIMATION_RATIO ------ 16
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: slow_cmp_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: comparator INSTANCE: slow_cmp
------------------------------------------------
          DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: ad2s1210 INSTANCE: ResolverSubmodule
------------------------------------------------
      SPI_ADDRESS ------ BASE_ADDRESS+'h40
      CONTROLLER_ADDRESS ------ BASE_ADDRESS
      BASE_ADDRESS ------ sdm_address_space::resolver
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: controller_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: spi_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
        STROBE_WIDTH ------ DATA_WIDTH/8
        LGMAXBURST ------ 5
        OPT_LINGER ------ 4
        SLAVE_ADDR ------ '{CONTROLLER_ADDRESS,SPI_ADDRESS}
        OPT_LOWPOWER ------ 1
        NS ------ 2
        NM ------ 1
        ADDR_WIDTH ------ 32
        SLAVE_MASK ------ '{2{32'h040}}
        DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
          LGNM ------ (NM>1)?$clog2(NM):1
          NMFULL ------ (NM>1)?(1<<LGNM):1
          LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
          NM ------ NM
          INTERCONNECT_ERROR ------ 2'b11
          SLAVE_ADDR ------ SLAVE_ADDR
          DATA_WIDTH ------ DATA_WIDTH
          OPT_SKID_INPUT ------ 0
          OPT_LINGER ------ OPT_LINGER
          LGMAXBURST ------ LGMAXBURST
          SLAVE_MASK ------ SLAVE_MASK
          ADDR_WIDTH ------ ADDR_WIDTH
          OPT_BUFFER_DECODER ------ 1
          OPT_LOWPOWER ------ OPT_LOWPOWER
          NS ------ NS
          LGNS ------ (NS>1)?$clog2(NS+1):1
          NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
            DATA_WIDTH ------ ADDR_WIDTH+3
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
            OPT_REGISTERED ------ OPT_BUFFER_DECODER
            SLAVE_MASK ------ SLAVE_MASK
            DW ------ 3
            OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
            ACCESS_ALLOWED ------ -1
            SLAVE_ADDR ------ SLAVE_ADDR
            AW ------ ADDR_WIDTH
            OPT_LOWPOWER ------ 0
            NS ------ NS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
            DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
            DATA_WIDTH ------ ADDR_WIDTH+3
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
            OPT_REGISTERED ------ OPT_BUFFER_DECODER
            SLAVE_MASK ------ SLAVE_MASK
            DW ------ 3
            OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
            ACCESS_ALLOWED ------ -1
            SLAVE_ADDR ------ SLAVE_ADDR
            AW ------ ADDR_WIDTH
            OPT_LOWPOWER ------ 0
            NS ------ NS
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: spi_transfer
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: ad2s1210_cu INSTANCE: CU
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ {32'b0,32'b0,32'b0,32'b0,32'b0,32'b0,32'b0,32'b0,32'b0,32'b0,{3'b0,5'd22,20'b0,2'b10,2'b0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'h3f
          N_WRITE_REGISTERS ------ 11
          TRIGGER_REGISTERS_IDX ------ '{9}
          N_READ_REGISTERS ------ 11
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: read_spi
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: cfg_spi
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: fc_spi
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_3 INSTANCE: spi_stream_combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: ad2s1210_reader INSTANCE: reader
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: ad2s1210_configurator INSTANCE: configurator
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: ad2s1210_fault_handler INSTANCE: fault_handler
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: SPI INSTANCE: ext_interface
------------------------------------------------
        OUTPUT_WIDTH ------ 32
        N_CHANNELS ------ 1
        SS_POLARITY_DEFAULT ------ 1
------------------------------------------------
------------------------------------------------
          MODULE: enable_generator_core INSTANCE: ENG
------------------------------------------------
          CLOCK_MODE ------ FALSE
          COUNTER_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: ClockGen INSTANCE: CKG
------------------------------------------------
          S2 ------ 2
          S1 ------ 1
          S0 ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: SpiRegister INSTANCE: SHR
------------------------------------------------
          serial_lsb_out_first ------ 1
          serial_msb_out_first ------ 0
          N_CHANNELS ------ N_CHANNELS
------------------------------------------------
------------------------------------------------
          MODULE: TransferEngine INSTANCE: STE
------------------------------------------------
          OUTPUT_WIDTH ------ OUTPUT_WIDTH
          N_CHANNELS ------ N_CHANNELS
------------------------------------------------
------------------------------------------------
          MODULE: SpiControlUnit INSTANCE: SCU
------------------------------------------------
          INITIAL_REGISTER_VALUES ------ {VARIABLE_INITIAL_VALUES,FIXED_REGISTER_VALUES}
          VARIABLE_INITIAL_VALUES ------ '{N_CHANNELS{1'b0}}
          FIXED_REGISTER_VALUES ------ '{0,0,1,{SS_POLARITY_DEFAULT,3'b0,SS_POLARITY_DEFAULT,5'b0,4'hE,4'b0}}
          TRIGGER_REGISTERS_IDX ------ '{3}
          N_REGISTERS ------ 4+N_CHANNELS
          OUTPUT_WIDTH ------ OUTPUT_WIDTH
          N_CHANNELS ------ N_CHANNELS
          SS_POLARITY_DEFAULT ------ SS_POLARITY_DEFAULT
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: axi_if
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_REGISTER_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ N_REGISTERS
            TRIGGER_REGISTERS_IDX ------ TRIGGER_REGISTERS_IDX
            N_READ_REGISTERS ------ N_REGISTERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: masked_current_error
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: electrical_angle
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: iq
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: speed_error
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: res_angle_pp
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: SicDriveMasterSpeedControl INSTANCE: speed_controller
------------------------------------------------
    EMULATE_ANGLE ------ FALSE
    TORQUE_SETPOINT ------ 86
    CONSTANT_TORQUE_MODE ------ FALSE
    DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
    N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_constant_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_constant_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_pid
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_pole_pairs
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_angle_gen
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: axi_reference_gen
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
      STROBE_WIDTH ------ DATA_WIDTH/8
      LGMAXBURST ------ 5
      OPT_LINGER ------ 4
      SLAVE_ADDR ------ '{sdm_address_space::const_1,sdm_address_space::const_2,sdm_address_space::pid,sdm_address_space::pole_pairs,sdm_address_space::angle_gen,sdm_address_space::ref_gen}
      OPT_LOWPOWER ------ 1
      NS ------ 6
      NM ------ 1
      ADDR_WIDTH ------ 32
      SLAVE_MASK ------ '{6{32'h0f00}}
      DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
        LGNM ------ (NM>1)?$clog2(NM):1
        NMFULL ------ (NM>1)?(1<<LGNM):1
        LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
        NM ------ NM
        INTERCONNECT_ERROR ------ 2'b11
        SLAVE_ADDR ------ SLAVE_ADDR
        DATA_WIDTH ------ DATA_WIDTH
        OPT_SKID_INPUT ------ 0
        OPT_LINGER ------ OPT_LINGER
        LGMAXBURST ------ LGMAXBURST
        SLAVE_MASK ------ SLAVE_MASK
        ADDR_WIDTH ------ ADDR_WIDTH
        OPT_BUFFER_DECODER ------ 1
        OPT_LOWPOWER ------ OPT_LOWPOWER
        NS ------ NS
        LGNS ------ (NS>1)?$clog2(NS+1):1
        NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
          DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: c_speed_ref
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: speed_ref
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: d_current_ref
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axis_constant INSTANCE: speed_setpoint
------------------------------------------------
      ADDITIONAL_BITS ------ 32-CONSTANT_WIDTH
      CONSTANT_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ {0}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
      MODULE: axis_constant INSTANCE: d_current_setpoint
------------------------------------------------
      ADDITIONAL_BITS ------ 32-CONSTANT_WIDTH
      CONSTANT_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ {0}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: pi_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: PID INSTANCE: speed_controller
------------------------------------------------
      INITIAL_OUTPUT_VALUES ------ '{'h010101,-16'sd32767,16'sd32767,-16'sd32767,16'sd32767,0,0,0,0}
      ADDITIONAL_BITS ------ 32-OUTPUT_DATA_WIDTH
      OUTPUT_DATA_WIDTH ------ DATA_PATH_WIDTH
      INPUT_DATA_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'h3f
        N_WRITE_REGISTERS ------ 9
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 9
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: Integrator INSTANCE: pid_int
------------------------------------------------
        DATA_WIDTH ------ OUTPUT_DATA_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: gpio INSTANCE: pole_pairs_io
------------------------------------------------
      ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
      ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
      OUTPUT_WIDTH ------ 4
      INPUT_WIDTH ------ 8
      BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 1
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: electrical_phase
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: SicDriveMasterAngleSource INSTANCE: angles_src
------------------------------------------------
      N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: axi_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: axi_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: axi_c
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: axi_d
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: axi_e
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: axi_f
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
        STROBE_WIDTH ------ DATA_WIDTH/8
        LGMAXBURST ------ 5
        OPT_LINGER ------ 4
        SLAVE_ADDR ------ '{sdm_address_space::angle_gen_ph_1,sdm_address_space::angle_gen_ph_2,sdm_address_space::angle_gen_ph_3,sdm_address_space::angle_gen_ph_4,sdm_address_space::angle_gen_ph_5,sdm_address_space::angle_gen_ph_6}
        OPT_LOWPOWER ------ 1
        NS ------ 6
        NM ------ 1
        ADDR_WIDTH ------ 32
        SLAVE_MASK ------ '{6{32'h0f0}}
        DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
          LGNM ------ (NM>1)?$clog2(NM):1
          NMFULL ------ (NM>1)?(1<<LGNM):1
          LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
          NM ------ NM
          INTERCONNECT_ERROR ------ 2'b11
          SLAVE_ADDR ------ SLAVE_ADDR
          DATA_WIDTH ------ DATA_WIDTH
          OPT_SKID_INPUT ------ 0
          OPT_LINGER ------ OPT_LINGER
          LGMAXBURST ------ LGMAXBURST
          SLAVE_MASK ------ SLAVE_MASK
          ADDR_WIDTH ------ ADDR_WIDTH
          OPT_BUFFER_DECODER ------ 1
          OPT_LOWPOWER ------ OPT_LOWPOWER
          NS ------ NS
          LGNS ------ (NS>1)?$clog2(NS+1):1
          NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
            DATA_WIDTH ------ ADDR_WIDTH+3
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
            OPT_REGISTERED ------ OPT_BUFFER_DECODER
            SLAVE_MASK ------ SLAVE_MASK
            DW ------ 3
            OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
            ACCESS_ALLOWED ------ -1
            SLAVE_ADDR ------ SLAVE_ADDR
            AW ------ ADDR_WIDTH
            OPT_LOWPOWER ------ 0
            NS ------ NS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
            DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
            DATA_WIDTH ------ ADDR_WIDTH+3
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
            OPT_REGISTERED ------ OPT_BUFFER_DECODER
            SLAVE_MASK ------ SLAVE_MASK
            DW ------ 3
            OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
            ACCESS_ALLOWED ------ -1
            SLAVE_ADDR ------ SLAVE_ADDR
            AW ------ ADDR_WIDTH
            OPT_LOWPOWER ------ 0
            NS ------ NS
------------------------------------------------
------------------------------------------------
        MODULE: gpio INSTANCE: gpio_a
------------------------------------------------
        ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
        ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
        OUTPUT_WIDTH ------ 32
        INPUT_WIDTH ------ 1
        BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'hf
          N_WRITE_REGISTERS ------ 1
          TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
          N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: gpio INSTANCE: gpio_b
------------------------------------------------
        ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
        ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
        OUTPUT_WIDTH ------ 32
        INPUT_WIDTH ------ 1
        BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'hf
          N_WRITE_REGISTERS ------ 1
          TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
          N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: gpio INSTANCE: gpio_c
------------------------------------------------
        ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
        ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
        OUTPUT_WIDTH ------ 32
        INPUT_WIDTH ------ 1
        BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'hf
          N_WRITE_REGISTERS ------ 1
          TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
          N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: gpio INSTANCE: gpio_d
------------------------------------------------
        ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
        ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
        OUTPUT_WIDTH ------ 32
        INPUT_WIDTH ------ 1
        BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'hf
          N_WRITE_REGISTERS ------ 1
          TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
          N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: gpio INSTANCE: gpio_e
------------------------------------------------
        ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
        ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
        OUTPUT_WIDTH ------ 32
        INPUT_WIDTH ------ 1
        BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'hf
          N_WRITE_REGISTERS ------ 1
          TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
          N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: gpio INSTANCE: gpio_f
------------------------------------------------
        ADDITIONAL_OUTPUT_BITS ------ 32-OUTPUT_WIDTH
        ADDITIONAL_INPUT_BITS ------ 32-INPUT_WIDTH
        OUTPUT_WIDTH ------ 32
        INPUT_WIDTH ------ 1
        BASE_ADDRESS ------ 0
------------------------------------------------
------------------------------------------------
          MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
          REGISTERED_BUFFERS ------ 0
          INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
          N_TRIGGER_REGISTERS ------ 1
          REGISTERS_WIDTH ------ 32
          ADDRESS_MASK ------ 'hf
          N_WRITE_REGISTERS ------ 1
          TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
          N_READ_REGISTERS ------ 2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
      MODULE: multiphase_reference_generator INSTANCE: I_ref_gen
------------------------------------------------
      HIGH_PERFORMANCE_SCALING ------ 0
      DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
      N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: emulated_phase
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: enable_generator_counter INSTANCE: angle_emulator_tb
------------------------------------------------
        EXTERNAL_TIMEBASE_ENABLE ------ 0
        COUNTER_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: generator_inner_phase
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: sin
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: cos
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: multiphase_sinusoid_generator INSTANCE: quadrature_generator
------------------------------------------------
        BASE_ADDRESS ------ 'h43c00000
        DATA_WIDTH ------ 16
        N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: theta
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: sin
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: cos
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: sin_out_n
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: cos_out_n
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: SinCosLUT INSTANCE: cos_LUTn
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: sineTable_lut INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axis_sync_repeater INSTANCE: speed_repeater
------------------------------------------------
    USER_WIDTH ------ 8
    DEST_WIDTH ------ 8
    DATA_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: registered_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axis_skid_buffer INSTANCE: buffer
------------------------------------------------
      USER_WIDTH ------ 32
      DEST_WIDTH ------ 32
      DATA_WIDTH ------ 32
      LATCHING ------ 1
      REGISTER_OUTPUT ------ 1
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream_combiner_3 INSTANCE: fcore_combiner
------------------------------------------------
    MSB_DEST_SUPPORT ------ "FALSE"
    TLAST_PERIOD ------ 1024
    USER_WIDTH ------ 8
    DEST_WIDTH ------ 8
    OUTPUT_DATA_WIDTH ------ 32
    INPUT_DATA_WIDTH ------ DATA_PATH_WIDTH
------------------------------------------------
------------------------------------------------
    MODULE: axis_constant INSTANCE: direct_slave_control
------------------------------------------------
    ADDITIONAL_BITS ------ 32-CONSTANT_WIDTH
    CONSTANT_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
      MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
      REGISTERED_BUFFERS ------ 0
      INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
      N_TRIGGER_REGISTERS ------ 1
      REGISTERS_WIDTH ------ 32
      ADDRESS_MASK ------ 'hf
      N_WRITE_REGISTERS ------ 3
      TRIGGER_REGISTERS_IDX ------ {0}
      N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
        DATA_WIDTH ------ 32+4
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: scope_vset
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: SicDriveMasterCurrentControl INSTANCE: current_controller
------------------------------------------------
    PROCESSOR_BASE_ADDRESS ------ BASE_ADDRESS
    PROCESSOR_REGISTERS_PER_CHANNEL ------ 64
    INJECTED_FAULT_PHASE ------ 0
    OC_FAULT_MESSAGE ------ 0
    BASE_ADDRESS ------ sdm_address_space::fcore
    DATA_PATH_WIDTH ------ DATA_PATH_WIDTH
    INIT_FILE ------ INIT_FILE
    FAST_DEBUG ------ FAST_DEBUG
    OC_FAULT_ADDRESS ------ 'h80
    N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: rtcu_dma_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: rtcu_fault_injection
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: axis_dma_write
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: axis_dma_read_req
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: axis_dma_read_resp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: efi_arguments
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: efi_results
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: fCore INSTANCE: processor
------------------------------------------------
      TRANSLATION_TABLE_INIT ------ TRANSPARENT
      EFI_IMPLEMENTED ------ 0
      REG_FILE_SIZE ------ REGISTER_FILE_DEPTH*MAX_CHANNELS
      FAST_DEBUG ------ FAST_DEBUG
      DATAPATH_WIDTH ------ 32
      SIM_CONFIG ------ FALSE
      ADDR_WIDTH ------ $clog2(INSTRUCTION_STORE_SIZE)
      BASE_REG_ADDR_WIDTH ------ $clog2(REGISTER_FILE_DEPTH)
      MAX_CHANNELS ------ N_PHASES+3
      REG_ADDR_WIDTH ------ BASE_REG_ADDR_WIDTH+CH_ADDRESS_WIDTH
      CH_ADDRESS_WIDTH ------ $clog2(MAX_CHANNELS)
      LOGIC_IMPLEMENTED ------ 1
      INIT_FILE ------ INIT_FILE
      BITMANIP_IMPLEMENTED ------ 0
      FULL_COMPARE ------ 1
      ALU_OPCODE_WIDTH ------ 5
      DMA_BASE_ADDRESS ------ PROCESSOR_BASE_ADDRESS
      INSTRUCTION_WIDTH ------ 32
      OPCODE_WIDTH ------ 5
      RECIPROCAL_PRESENT ------ 0
      INSTRUCTION_STORE_SIZE ------ 1024
      REGISTER_FILE_DEPTH ------ 64
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operand_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operand_a_dly
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operand_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operand_b_dly
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operand_c
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operand_c_dly
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operation
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: operation_dly
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: result
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: instruction_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: io_mapping
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: fCore_ControlUnit INSTANCE: control_unit
------------------------------------------------
        EFI_IMPLEMENTED ------ EFI_IMPLEMENTED
        INSTRUCTION_WIDTH ------ INSTRUCTION_WIDTH
        MAX_CHANNELS ------ MAX_CHANNELS
        OPCODE_WIDTH ------ 5
        PC_WIDTH ------ ADDR_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: fCore_decoder INSTANCE: decoder
------------------------------------------------
        REG_ADDR_WIDTH ------ BASE_REG_ADDR_WIDTH
        OPCODE_WIDTH ------ OPCODE_WIDTH
        IMMEDIATE_WIDTH ------ 12
        PC_WIDTH ------ ADDR_WIDTH
        DATAPATH_WIDTH ------ DATAPATH_WIDTH
        CHANNEL_ADDR_WIDTH ------ CH_ADDRESS_WIDTH
        MAX_CHANNELS ------ MAX_CHANNELS
        INSTRUCTION_WIDTH ------ INSTRUCTION_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: fCore_pipeline_tracker INSTANCE: pipeline_tracker
------------------------------------------------
          REG_ADDR_WIDTH ------ OPCODE_WIDTH
          OPCODE_WIDTH ------ OPCODE_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: register_slice INSTANCE: reg_operation
------------------------------------------------
        READY_REG ------ 0
        N_STAGES ------ 1
        USER_WIDTH ------ 32
        DEST_WIDTH ------ 32
        DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: fCore_FP_ALU INSTANCE: executor
------------------------------------------------
        PIPELINE_LENGTH ------ 5+3*RECIPROCAL_PRESENT
        LOGIC_IMPLEMENTED ------ LOGIC_IMPLEMENTED
        FULL_COMPARE ------ FULL_COMPARE
        BITMANIP_IMPLEMENTED ------ BITMANIP_IMPLEMENTED
        RECIPROCAL_PRESENT ------ RECIPROCAL_PRESENT
        REGISTER_ADDR_WIDTH ------ REG_ADDR_WIDTH
        OPCODE_WIDTH ------ OPCODE_WIDTH
        PIPELINE_DEPTH ------ 5
        DATAPATH_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: add_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: reciprocal_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: mul_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: fti_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: itf_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: logic_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: comparison_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: early_logic_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: saturation_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: ldr_operand_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: ldc_adj_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: ldc_operand_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: early_bitmanip_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bitmanip_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: abs_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: early_abs_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: div_alu_wrapper INSTANCE: div_alu
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: fcore_div_alu INSTANCE: div_alu_bd
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: simple_alu_wrapper INSTANCE: simple_alu
------------------------------------------------
          REGISTER_ADDR_WIDTH ------ REGISTER_ADDR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: fcore_simple_alu INSTANCE: fp_simple_alu_bd
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: register_slice INSTANCE: abs_pipeline_adapter
------------------------------------------------
          READY_REG ------ 0
          N_STAGES ------ PIPELINE_DEPTH-1
          USER_WIDTH ------ 32
          DEST_WIDTH ------ 32
          DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: fCore_logic_unit INSTANCE: logic_engine
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: register_slice INSTANCE: logic_pipeline_adapter
------------------------------------------------
          READY_REG ------ 0
          N_STAGES ------ PIPELINE_DEPTH-1
          USER_WIDTH ------ 32
          DEST_WIDTH ------ 32
          DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: fCore_bitmanip_unit INSTANCE: bitmanip_engine
------------------------------------------------
          PIPELINE_DEPTH ------ PIPELINE_DEPTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: bitmanip_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: popcount_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: early_bitmanip_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: register_slice INSTANCE: bitmanip_pipeline_adapter
------------------------------------------------
            READY_REG ------ 0
            N_STAGES ------ PIPELINE_DEPTH-1
            USER_WIDTH ------ 32
            DEST_WIDTH ------ 32
            DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: early_popcount_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: register_slice INSTANCE: popcount_pipeline_adapter
------------------------------------------------
            READY_REG ------ 0
            N_STAGES ------ PIPELINE_DEPTH-2
            USER_WIDTH ------ 32
            DEST_WIDTH ------ 32
            DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: FP_saturator INSTANCE: saturator
------------------------------------------------
          SELCTION_DEST ------ 0
          REG_ADDR_WIDTH ------ REGISTER_ADDR_WIDTH
          PIPELINE_DEPTH ------ PIPELINE_DEPTH
          DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: early_saturation_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: register_slice INSTANCE: sat_pipeline_adapter
------------------------------------------------
            READY_REG ------ 0
            N_STAGES ------ PIPELINE_DEPTH-2
            USER_WIDTH ------ 32
            DEST_WIDTH ------ 32
            DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: fCore_compare_unit INSTANCE: compare_unit
------------------------------------------------
          PIPELINE_DEPTH ------ PIPELINE_DEPTH
          FULL_COMPARE ------ FULL_COMPARE
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: early_compare_result
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: register_slice INSTANCE: compare_pipeline_adapter
------------------------------------------------
            READY_REG ------ 0
            N_STAGES ------ PIPELINE_DEPTH-1
            USER_WIDTH ------ 32
            DEST_WIDTH ------ 32
            DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: register_slice INSTANCE: load_register_pipeline
------------------------------------------------
          READY_REG ------ 0
          N_STAGES ------ PIPELINE_DEPTH
          USER_WIDTH ------ 32
          DEST_WIDTH ------ 32
          DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: register_slice INSTANCE: load_constant_pipeline
------------------------------------------------
          READY_REG ------ 0
          N_STAGES ------ PIPELINE_DEPTH-2
          USER_WIDTH ------ 32
          DEST_WIDTH ------ 32
          DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: efi_writeback
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: fCore_efi_memory_handler INSTANCE: efi_handler
------------------------------------------------
        CH_ADDRESS_WIDTH ------ CH_ADDRESS_WIDTH
        BASE_REG_ADDR_WIDTH ------ BASE_REG_ADDR_WIDTH
        REG_ADDR_WIDTH ------ REG_ADDR_WIDTH
        DATAPATH_WIDTH ------ DATAPATH_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: dma_write
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: fCore_dma_endpoint INSTANCE: dma_ep
------------------------------------------------
        REGISTER_FILE_DEPTH ------ REGISTER_FILE_DEPTH
        TRANSLATION_TABLE_INIT ------ TRANSLATION_TABLE_INIT
        DATAPATH_WIDTH ------ DATAPATH_WIDTH
        REG_ADDR_WIDTH ------ REG_ADDR_WIDTH
        BASE_ADDRESS ------ DMA_BASE_ADDRESS
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: axi_read_addr
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: axi_read_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: axi_write_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axil_external_registers_cu INSTANCE: AXI_endpoint
------------------------------------------------
          READ_DELAY ------ 0
          BASE_ADDRESS ------ BASE_ADDRESS
          REGISTERED_BUFFERS ------ 0
          REGISTERS_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
            DATA_WIDTH ------ 32
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
            DATA_WIDTH ------ 32+4
            REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: fCore_Istore INSTANCE: store
------------------------------------------------
        USER_NUM_MEM ------ 100
        ADDR_LSB ------ (DATA_WIDTH/32)+1
        OPT_MEM_ADDR_BITS ------ 7
        INIT_FILE ------ INIT_FILE
        FAST_DEBUG ------ FAST_DEBUG
        MEM_DEPTH ------ INSTRUCTION_STORE_SIZE
        ADDR_WIDTH ------ $clog2(MEM_DEPTH)
        USER_WIDTH ------ 10
        REGISTERED ------ "TRUE"
        READBACK ------ DISABLED
        DATA_WIDTH ------ INSTRUCTION_WIDTH
        ID_WIDTH ------ 1
------------------------------------------------
------------------------------------------------
          MODULE: istore_memory INSTANCE: memory_block
------------------------------------------------
          INIT_FILE ------ INIT_FILE
          FAST_DEBUG ------ FAST_DEBUG
          ADDR_WIDTH ------ $clog2(MEM_DEPTH)
          DATA_WIDTH_B ------ 64
          DATA_WIDTH_A ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: fCore_registerFile INSTANCE: registers
------------------------------------------------
        EFI_IMPLEMENTED ------ EFI_IMPLEMENTED
        BITMANIP_IMPLEMENTED ------ BITMANIP_IMPLEMENTED
        REG_PER_CHANNEL ------ REGISTER_FILE_DEPTH
        FILE_DEPTH ------ REG_FILE_SIZE
        REGISTER_WIDTH ------ DATAPATH_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: ram_write_if
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: DP_RAM INSTANCE: mem_a
------------------------------------------------
          INIT_LEN ------ 1
          ADDR_WIDTH ------ $clog2(FILE_DEPTH)
          MEM_INIT ------ '{INIT_LEN{0}}
          DATA_WIDTH ------ REGISTER_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: DP_RAM INSTANCE: mem_b
------------------------------------------------
          INIT_LEN ------ 1
          ADDR_WIDTH ------ $clog2(FILE_DEPTH)
          MEM_INIT ------ '{INIT_LEN{0}}
          DATA_WIDTH ------ REGISTER_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: DP_RAM INSTANCE: mem_c
------------------------------------------------
          INIT_LEN ------ 1
          ADDR_WIDTH ------ $clog2(FILE_DEPTH)
          MEM_INIT ------ '{INIT_LEN{0}}
          DATA_WIDTH ------ REGISTER_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: fCore_tracer INSTANCE: tracer
------------------------------------------------
        MAX_CHANNELS ------ MAX_CHANNELS
        PC_WIDTH ------ ADDR_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: mover_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axis_data_mover INSTANCE: mover
------------------------------------------------
      SOURCE_ADDR ------ '{335,271,207,143,79,15}
      CHANNEL_NUMBER ------ N_PHASES
      TARGET_ADDR ------ '{5,4,3,2,1,0}
      ADDRESS_WIDTH ------ 32
      DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: controlled_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: rtcu_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: phase_reconstructor INSTANCE: last_phase_controller
------------------------------------------------
      TARGET_ADDRESS ------ 'h08
      DATA_PATH_WIDTH ------ 16
      MISSING_PHASE ------ 6
      N_PHASES ------ 6
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_combiner_3 INSTANCE: rtcu_combiner
------------------------------------------------
      MSB_DEST_SUPPORT ------ "FALSE"
      TLAST_PERIOD ------ 1024
      USER_WIDTH ------ 8
      DEST_WIDTH ------ 8
      OUTPUT_DATA_WIDTH ------ 40
      INPUT_DATA_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: dummy_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: RTCU_multichannel_6 INSTANCE: rtcu
------------------------------------------------
      RTCU_6_BASE ------ BASE_ADDRESS+80
      RTCU_5_BASE ------ BASE_ADDRESS+64
      RTCU_4_BASE ------ BASE_ADDRESS+48
      RTCU_3_BASE ------ BASE_ADDRESS+32
      RTCU_2_BASE ------ BASE_ADDRESS+16
      RTCU_1_BASE ------ BASE_ADDRESS+0
      FAULT_MESSAGE ------ OC_FAULT_MESSAGE
      FAULT_ADDRESS ------ OC_FAULT_ADDRESS
      ERROR_CORRECTION ------ "HAMMING"
      BASE_ADDRESS ------ 'h43c00000
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_1_received_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_2_received_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_3_received_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_4_received_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_5_received_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_6_received_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_1_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_2_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_3_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_4_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_5_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: ch_6_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: rtcu_0_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: rtcu_1_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: rtcu_2_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: rtcu_3_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: rtcu_4_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_lite INSTANCE: rtcu_5_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
        STROBE_WIDTH ------ DATA_WIDTH/8
        LGMAXBURST ------ 5
        OPT_LINGER ------ 4
        SLAVE_ADDR ------ '{RTCU_1_BASE,RTCU_2_BASE,RTCU_3_BASE,RTCU_4_BASE,RTCU_5_BASE,RTCU_6_BASE}
        OPT_LOWPOWER ------ 1
        NS ------ 6
        NM ------ 1
        ADDR_WIDTH ------ 32
        SLAVE_MASK ------ '{6{32'hff0}}
        DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
          LGNM ------ (NM>1)?$clog2(NM):1
          NMFULL ------ (NM>1)?(1<<LGNM):1
          LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
          NM ------ NM
          INTERCONNECT_ERROR ------ 2'b11
          SLAVE_ADDR ------ SLAVE_ADDR
          DATA_WIDTH ------ DATA_WIDTH
          OPT_SKID_INPUT ------ 0
          OPT_LINGER ------ OPT_LINGER
          LGMAXBURST ------ LGMAXBURST
          SLAVE_MASK ------ SLAVE_MASK
          ADDR_WIDTH ------ ADDR_WIDTH
          OPT_BUFFER_DECODER ------ 1
          OPT_LOWPOWER ------ OPT_LOWPOWER
          NS ------ NS
          LGNS ------ (NS>1)?$clog2(NS+1):1
          NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
            DATA_WIDTH ------ ADDR_WIDTH+3
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
            OPT_REGISTERED ------ OPT_BUFFER_DECODER
            SLAVE_MASK ------ SLAVE_MASK
            DW ------ 3
            OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
            ACCESS_ALLOWED ------ -1
            SLAVE_ADDR ------ SLAVE_ADDR
            AW ------ ADDR_WIDTH
            OPT_LOWPOWER ------ 0
            NS ------ NS
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
            DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
            DATA_WIDTH ------ ADDR_WIDTH+3
            REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
            MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
            OPT_REGISTERED ------ OPT_BUFFER_DECODER
            SLAVE_MASK ------ SLAVE_MASK
            DW ------ 3
            OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
            ACCESS_ALLOWED ------ -1
            SLAVE_ADDR ------ SLAVE_ADDR
            AW ------ ADDR_WIDTH
            OPT_LOWPOWER ------ 0
            NS ------ NS
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_multichannel_CU INSTANCE: CU
------------------------------------------------
        N_CHANNELS ------ 6
        BASE_ADDRESS ------ BASE_ADDRESS
------------------------------------------------
------------------------------------------------
        MODULE: fault_management_unit INSTANCE: FMU
------------------------------------------------
        N_CHANNELS ------ 6
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_channel_master INSTANCE: channel_1
------------------------------------------------
        PAYLOAD_LENGTH ------ 40
        TX_ENABLED ------ TRUE
        RX_ENABLED ------ TRUE
        TX_INTERFACE_TYPE ------ SYNC
        RX_INTERFACE_TYPE ------ SYNC
        FAULT_MESSAGE ------ FAULT_MESSAGE
        FAULT_ADDRESS ------ FAULT_ADDRESS
        SCRAMBLING ------ ENABLED
        ERROR_CORRECTION ------ HAMMING
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bus_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: link_control
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: payload_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: inner_rx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: tx_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: prioritised_fifo INSTANCE: tx_fifo
------------------------------------------------
          FIFO_DEPTH ------ 8
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: hp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: lp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
          MODULE: RTCU_m_channel_CU INSTANCE: ControlUnit
------------------------------------------------
          INITIAL_OUTPUT_VALUES ------ '{0,0,450,2000}
          FAULT_MESSAGE ------ FAULT_MESSAGE
          FAULT_ADDRESS ------ FAULT_ADDRESS
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ 4
            TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
            N_READ_REGISTERS ------ 4
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: master_link_manager INSTANCE: manager
------------------------------------------------
          dead ------ 6
          unresponsive ------ 5
          normal ------ 3
          slave_ack ------ 2
          fault ------ 4
          master_ack ------ 1
          idle ------ 0
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: manager
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: acknowledge_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: master_channel_tracker INSTANCE: state_tracker
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: watchdog_timer INSTANCE: watchdog
------------------------------------------------
            COUNTER_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
            MSB_DEST_SUPPORT ------ "FALSE"
            TLAST_PERIOD ------ 1024
            USER_WIDTH ------ 8
            DEST_WIDTH ------ 8
            OUTPUT_DATA_WIDTH ------ 32
            INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: acknowledge_unit INSTANCE: ack
------------------------------------------------
            N_CHANNELS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_Hamming INSTANCE: TX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          COOLDOWN_LENGHT ------ 25
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: Encoder INSTANCE: ecc_encoder
------------------------------------------------
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: generator INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: io_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: serializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ "TRUE"
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_Hamming INSTANCE: RX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ NEGATIVE
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: deserializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Decoder INSTANCE: rx_error_corrector
------------------------------------------------
            ERROR_ADDR_WIDTH ------ $clog2(MESSAGE_WIDTH)-1
            CHECKSUM_PARTITIONS ------ $rtoi($ceil(MESSAGE_WIDTH/16.0))
            MESSAGE_WIDTH ------ PAYLOAD_WIDTH+PARITY_WIDTH
            N_SYNDROMES ------ 2<<(PARITY_WIDTH-1)
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: SyndromeCalculator INSTANCE: SC
------------------------------------------------
              SYNDROME_PARTITIONS ------ 2
              MESSAGE_WIDTH ------ MESSAGE_WIDTH
              PARITY_WIDTH ------ PARITY_WIDTH
              PAYLOAD_WIDTH ------ PAYLOAD_WIDTH
------------------------------------------------
------------------------------------------------
                MODULE: parity INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: syndromes INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: descrambled_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_RS INSTANCE: RX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoded_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsDecoder INSTANCE: DEC
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: PacketReconstructor INSTANCE: rec
------------------------------------------------
              PIPELINE_DELAY ------ 28
              MESSAGE_LENGTH ------ 11
------------------------------------------------
------------------------------------------------
              MODULE: Syndromes INSTANCE: syn_calc
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK2 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK4 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK8 INSTANCE: GM3
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: EuclideanAlgorithm INSTANCE: eucl
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GFDivider INSTANCE: div
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFT
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFD0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: InverseLUT INSTANCE: Inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GMq
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda0
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: ChienSearch INSTANCE: chien
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT2
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: Forney INSTANCE: forn
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gm1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: InverseLUT INSTANCE: inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gme
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: delay_line INSTANCE: data_fifo
------------------------------------------------
              DELAY_LENGTH ------ 30
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFD
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_RS INSTANCE: TX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scrambled_tx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsEncoder INSTANCE: enc
------------------------------------------------
            C_T ------ C_N-C_K
            C_K ------ 11
            C_M ------ 4
            C_N ------ 15
------------------------------------------------
------------------------------------------------
              MODULE: ShiftReg_11s_4b INSTANCE: shift_reg
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: dff4 INSTANCE: Cx
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: GaloisMult19 INSTANCE: GMP
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_channel_master INSTANCE: channel_2
------------------------------------------------
        PAYLOAD_LENGTH ------ 40
        TX_ENABLED ------ TRUE
        RX_ENABLED ------ TRUE
        TX_INTERFACE_TYPE ------ SYNC
        RX_INTERFACE_TYPE ------ SYNC
        FAULT_MESSAGE ------ FAULT_MESSAGE
        FAULT_ADDRESS ------ FAULT_ADDRESS
        SCRAMBLING ------ ENABLED
        ERROR_CORRECTION ------ HAMMING
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bus_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: link_control
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: payload_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: inner_rx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: tx_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: prioritised_fifo INSTANCE: tx_fifo
------------------------------------------------
          FIFO_DEPTH ------ 8
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: hp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: lp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
          MODULE: RTCU_m_channel_CU INSTANCE: ControlUnit
------------------------------------------------
          INITIAL_OUTPUT_VALUES ------ '{0,0,450,2000}
          FAULT_MESSAGE ------ FAULT_MESSAGE
          FAULT_ADDRESS ------ FAULT_ADDRESS
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ 4
            TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
            N_READ_REGISTERS ------ 4
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: master_link_manager INSTANCE: manager
------------------------------------------------
          dead ------ 6
          unresponsive ------ 5
          normal ------ 3
          slave_ack ------ 2
          fault ------ 4
          master_ack ------ 1
          idle ------ 0
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: manager
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: acknowledge_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: master_channel_tracker INSTANCE: state_tracker
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: watchdog_timer INSTANCE: watchdog
------------------------------------------------
            COUNTER_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
            MSB_DEST_SUPPORT ------ "FALSE"
            TLAST_PERIOD ------ 1024
            USER_WIDTH ------ 8
            DEST_WIDTH ------ 8
            OUTPUT_DATA_WIDTH ------ 32
            INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: acknowledge_unit INSTANCE: ack
------------------------------------------------
            N_CHANNELS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_Hamming INSTANCE: TX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          COOLDOWN_LENGHT ------ 25
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: Encoder INSTANCE: ecc_encoder
------------------------------------------------
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: generator INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: io_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: serializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ "TRUE"
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_Hamming INSTANCE: RX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ NEGATIVE
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: deserializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Decoder INSTANCE: rx_error_corrector
------------------------------------------------
            ERROR_ADDR_WIDTH ------ $clog2(MESSAGE_WIDTH)-1
            CHECKSUM_PARTITIONS ------ $rtoi($ceil(MESSAGE_WIDTH/16.0))
            MESSAGE_WIDTH ------ PAYLOAD_WIDTH+PARITY_WIDTH
            N_SYNDROMES ------ 2<<(PARITY_WIDTH-1)
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: SyndromeCalculator INSTANCE: SC
------------------------------------------------
              SYNDROME_PARTITIONS ------ 2
              MESSAGE_WIDTH ------ MESSAGE_WIDTH
              PARITY_WIDTH ------ PARITY_WIDTH
              PAYLOAD_WIDTH ------ PAYLOAD_WIDTH
------------------------------------------------
------------------------------------------------
                MODULE: parity INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: syndromes INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: descrambled_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_RS INSTANCE: RX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoded_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsDecoder INSTANCE: DEC
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: PacketReconstructor INSTANCE: rec
------------------------------------------------
              PIPELINE_DELAY ------ 28
              MESSAGE_LENGTH ------ 11
------------------------------------------------
------------------------------------------------
              MODULE: Syndromes INSTANCE: syn_calc
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK2 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK4 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK8 INSTANCE: GM3
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: EuclideanAlgorithm INSTANCE: eucl
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GFDivider INSTANCE: div
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFT
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFD0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: InverseLUT INSTANCE: Inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GMq
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda0
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: ChienSearch INSTANCE: chien
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT2
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: Forney INSTANCE: forn
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gm1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: InverseLUT INSTANCE: inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gme
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: delay_line INSTANCE: data_fifo
------------------------------------------------
              DELAY_LENGTH ------ 30
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFD
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_RS INSTANCE: TX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scrambled_tx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsEncoder INSTANCE: enc
------------------------------------------------
            C_T ------ C_N-C_K
            C_K ------ 11
            C_M ------ 4
            C_N ------ 15
------------------------------------------------
------------------------------------------------
              MODULE: ShiftReg_11s_4b INSTANCE: shift_reg
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: dff4 INSTANCE: Cx
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: GaloisMult19 INSTANCE: GMP
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_channel_master INSTANCE: channel_3
------------------------------------------------
        PAYLOAD_LENGTH ------ 40
        TX_ENABLED ------ TRUE
        RX_ENABLED ------ TRUE
        TX_INTERFACE_TYPE ------ SYNC
        RX_INTERFACE_TYPE ------ SYNC
        FAULT_MESSAGE ------ FAULT_MESSAGE
        FAULT_ADDRESS ------ FAULT_ADDRESS
        SCRAMBLING ------ ENABLED
        ERROR_CORRECTION ------ HAMMING
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bus_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: link_control
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: payload_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: inner_rx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: tx_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: prioritised_fifo INSTANCE: tx_fifo
------------------------------------------------
          FIFO_DEPTH ------ 8
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: hp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: lp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
          MODULE: RTCU_m_channel_CU INSTANCE: ControlUnit
------------------------------------------------
          INITIAL_OUTPUT_VALUES ------ '{0,0,450,2000}
          FAULT_MESSAGE ------ FAULT_MESSAGE
          FAULT_ADDRESS ------ FAULT_ADDRESS
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ 4
            TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
            N_READ_REGISTERS ------ 4
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: master_link_manager INSTANCE: manager
------------------------------------------------
          dead ------ 6
          unresponsive ------ 5
          normal ------ 3
          slave_ack ------ 2
          fault ------ 4
          master_ack ------ 1
          idle ------ 0
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: manager
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: acknowledge_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: master_channel_tracker INSTANCE: state_tracker
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: watchdog_timer INSTANCE: watchdog
------------------------------------------------
            COUNTER_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
            MSB_DEST_SUPPORT ------ "FALSE"
            TLAST_PERIOD ------ 1024
            USER_WIDTH ------ 8
            DEST_WIDTH ------ 8
            OUTPUT_DATA_WIDTH ------ 32
            INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: acknowledge_unit INSTANCE: ack
------------------------------------------------
            N_CHANNELS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_Hamming INSTANCE: TX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          COOLDOWN_LENGHT ------ 25
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: Encoder INSTANCE: ecc_encoder
------------------------------------------------
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: generator INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: io_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: serializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ "TRUE"
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_Hamming INSTANCE: RX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ NEGATIVE
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: deserializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Decoder INSTANCE: rx_error_corrector
------------------------------------------------
            ERROR_ADDR_WIDTH ------ $clog2(MESSAGE_WIDTH)-1
            CHECKSUM_PARTITIONS ------ $rtoi($ceil(MESSAGE_WIDTH/16.0))
            MESSAGE_WIDTH ------ PAYLOAD_WIDTH+PARITY_WIDTH
            N_SYNDROMES ------ 2<<(PARITY_WIDTH-1)
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: SyndromeCalculator INSTANCE: SC
------------------------------------------------
              SYNDROME_PARTITIONS ------ 2
              MESSAGE_WIDTH ------ MESSAGE_WIDTH
              PARITY_WIDTH ------ PARITY_WIDTH
              PAYLOAD_WIDTH ------ PAYLOAD_WIDTH
------------------------------------------------
------------------------------------------------
                MODULE: parity INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: syndromes INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: descrambled_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_RS INSTANCE: RX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoded_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsDecoder INSTANCE: DEC
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: PacketReconstructor INSTANCE: rec
------------------------------------------------
              PIPELINE_DELAY ------ 28
              MESSAGE_LENGTH ------ 11
------------------------------------------------
------------------------------------------------
              MODULE: Syndromes INSTANCE: syn_calc
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK2 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK4 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK8 INSTANCE: GM3
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: EuclideanAlgorithm INSTANCE: eucl
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GFDivider INSTANCE: div
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFT
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFD0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: InverseLUT INSTANCE: Inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GMq
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda0
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: ChienSearch INSTANCE: chien
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT2
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: Forney INSTANCE: forn
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gm1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: InverseLUT INSTANCE: inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gme
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: delay_line INSTANCE: data_fifo
------------------------------------------------
              DELAY_LENGTH ------ 30
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFD
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_RS INSTANCE: TX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scrambled_tx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsEncoder INSTANCE: enc
------------------------------------------------
            C_T ------ C_N-C_K
            C_K ------ 11
            C_M ------ 4
            C_N ------ 15
------------------------------------------------
------------------------------------------------
              MODULE: ShiftReg_11s_4b INSTANCE: shift_reg
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: dff4 INSTANCE: Cx
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: GaloisMult19 INSTANCE: GMP
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_channel_master INSTANCE: channel_4
------------------------------------------------
        PAYLOAD_LENGTH ------ 40
        TX_ENABLED ------ TRUE
        RX_ENABLED ------ TRUE
        TX_INTERFACE_TYPE ------ SYNC
        RX_INTERFACE_TYPE ------ SYNC
        FAULT_MESSAGE ------ FAULT_MESSAGE
        FAULT_ADDRESS ------ FAULT_ADDRESS
        SCRAMBLING ------ ENABLED
        ERROR_CORRECTION ------ HAMMING
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bus_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: link_control
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: payload_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: inner_rx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: tx_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: prioritised_fifo INSTANCE: tx_fifo
------------------------------------------------
          FIFO_DEPTH ------ 8
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: hp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: lp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
          MODULE: RTCU_m_channel_CU INSTANCE: ControlUnit
------------------------------------------------
          INITIAL_OUTPUT_VALUES ------ '{0,0,450,2000}
          FAULT_MESSAGE ------ FAULT_MESSAGE
          FAULT_ADDRESS ------ FAULT_ADDRESS
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ 4
            TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
            N_READ_REGISTERS ------ 4
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: master_link_manager INSTANCE: manager
------------------------------------------------
          dead ------ 6
          unresponsive ------ 5
          normal ------ 3
          slave_ack ------ 2
          fault ------ 4
          master_ack ------ 1
          idle ------ 0
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: manager
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: acknowledge_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: master_channel_tracker INSTANCE: state_tracker
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: watchdog_timer INSTANCE: watchdog
------------------------------------------------
            COUNTER_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
            MSB_DEST_SUPPORT ------ "FALSE"
            TLAST_PERIOD ------ 1024
            USER_WIDTH ------ 8
            DEST_WIDTH ------ 8
            OUTPUT_DATA_WIDTH ------ 32
            INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: acknowledge_unit INSTANCE: ack
------------------------------------------------
            N_CHANNELS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_Hamming INSTANCE: TX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          COOLDOWN_LENGHT ------ 25
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: Encoder INSTANCE: ecc_encoder
------------------------------------------------
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: generator INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: io_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: serializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ "TRUE"
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_Hamming INSTANCE: RX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ NEGATIVE
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: deserializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Decoder INSTANCE: rx_error_corrector
------------------------------------------------
            ERROR_ADDR_WIDTH ------ $clog2(MESSAGE_WIDTH)-1
            CHECKSUM_PARTITIONS ------ $rtoi($ceil(MESSAGE_WIDTH/16.0))
            MESSAGE_WIDTH ------ PAYLOAD_WIDTH+PARITY_WIDTH
            N_SYNDROMES ------ 2<<(PARITY_WIDTH-1)
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: SyndromeCalculator INSTANCE: SC
------------------------------------------------
              SYNDROME_PARTITIONS ------ 2
              MESSAGE_WIDTH ------ MESSAGE_WIDTH
              PARITY_WIDTH ------ PARITY_WIDTH
              PAYLOAD_WIDTH ------ PAYLOAD_WIDTH
------------------------------------------------
------------------------------------------------
                MODULE: parity INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: syndromes INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: descrambled_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_RS INSTANCE: RX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoded_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsDecoder INSTANCE: DEC
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: PacketReconstructor INSTANCE: rec
------------------------------------------------
              PIPELINE_DELAY ------ 28
              MESSAGE_LENGTH ------ 11
------------------------------------------------
------------------------------------------------
              MODULE: Syndromes INSTANCE: syn_calc
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK2 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK4 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK8 INSTANCE: GM3
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: EuclideanAlgorithm INSTANCE: eucl
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GFDivider INSTANCE: div
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFT
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFD0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: InverseLUT INSTANCE: Inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GMq
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda0
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: ChienSearch INSTANCE: chien
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT2
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: Forney INSTANCE: forn
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gm1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: InverseLUT INSTANCE: inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gme
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: delay_line INSTANCE: data_fifo
------------------------------------------------
              DELAY_LENGTH ------ 30
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFD
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_RS INSTANCE: TX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scrambled_tx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsEncoder INSTANCE: enc
------------------------------------------------
            C_T ------ C_N-C_K
            C_K ------ 11
            C_M ------ 4
            C_N ------ 15
------------------------------------------------
------------------------------------------------
              MODULE: ShiftReg_11s_4b INSTANCE: shift_reg
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: dff4 INSTANCE: Cx
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: GaloisMult19 INSTANCE: GMP
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_channel_master INSTANCE: channel_5
------------------------------------------------
        PAYLOAD_LENGTH ------ 40
        TX_ENABLED ------ TRUE
        RX_ENABLED ------ TRUE
        TX_INTERFACE_TYPE ------ SYNC
        RX_INTERFACE_TYPE ------ SYNC
        FAULT_MESSAGE ------ FAULT_MESSAGE
        FAULT_ADDRESS ------ FAULT_ADDRESS
        SCRAMBLING ------ ENABLED
        ERROR_CORRECTION ------ HAMMING
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bus_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: link_control
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: payload_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: inner_rx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: tx_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: prioritised_fifo INSTANCE: tx_fifo
------------------------------------------------
          FIFO_DEPTH ------ 8
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: hp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: lp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
          MODULE: RTCU_m_channel_CU INSTANCE: ControlUnit
------------------------------------------------
          INITIAL_OUTPUT_VALUES ------ '{0,0,450,2000}
          FAULT_MESSAGE ------ FAULT_MESSAGE
          FAULT_ADDRESS ------ FAULT_ADDRESS
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ 4
            TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
            N_READ_REGISTERS ------ 4
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: master_link_manager INSTANCE: manager
------------------------------------------------
          dead ------ 6
          unresponsive ------ 5
          normal ------ 3
          slave_ack ------ 2
          fault ------ 4
          master_ack ------ 1
          idle ------ 0
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: manager
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: acknowledge_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: master_channel_tracker INSTANCE: state_tracker
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: watchdog_timer INSTANCE: watchdog
------------------------------------------------
            COUNTER_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
            MSB_DEST_SUPPORT ------ "FALSE"
            TLAST_PERIOD ------ 1024
            USER_WIDTH ------ 8
            DEST_WIDTH ------ 8
            OUTPUT_DATA_WIDTH ------ 32
            INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: acknowledge_unit INSTANCE: ack
------------------------------------------------
            N_CHANNELS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_Hamming INSTANCE: TX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          COOLDOWN_LENGHT ------ 25
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: Encoder INSTANCE: ecc_encoder
------------------------------------------------
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: generator INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: io_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: serializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ "TRUE"
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_Hamming INSTANCE: RX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ NEGATIVE
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: deserializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Decoder INSTANCE: rx_error_corrector
------------------------------------------------
            ERROR_ADDR_WIDTH ------ $clog2(MESSAGE_WIDTH)-1
            CHECKSUM_PARTITIONS ------ $rtoi($ceil(MESSAGE_WIDTH/16.0))
            MESSAGE_WIDTH ------ PAYLOAD_WIDTH+PARITY_WIDTH
            N_SYNDROMES ------ 2<<(PARITY_WIDTH-1)
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: SyndromeCalculator INSTANCE: SC
------------------------------------------------
              SYNDROME_PARTITIONS ------ 2
              MESSAGE_WIDTH ------ MESSAGE_WIDTH
              PARITY_WIDTH ------ PARITY_WIDTH
              PAYLOAD_WIDTH ------ PAYLOAD_WIDTH
------------------------------------------------
------------------------------------------------
                MODULE: parity INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: syndromes INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: descrambled_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_RS INSTANCE: RX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoded_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsDecoder INSTANCE: DEC
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: PacketReconstructor INSTANCE: rec
------------------------------------------------
              PIPELINE_DELAY ------ 28
              MESSAGE_LENGTH ------ 11
------------------------------------------------
------------------------------------------------
              MODULE: Syndromes INSTANCE: syn_calc
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK2 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK4 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK8 INSTANCE: GM3
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: EuclideanAlgorithm INSTANCE: eucl
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GFDivider INSTANCE: div
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFT
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFD0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: InverseLUT INSTANCE: Inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GMq
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda0
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: ChienSearch INSTANCE: chien
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT2
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: Forney INSTANCE: forn
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gm1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: InverseLUT INSTANCE: inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gme
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: delay_line INSTANCE: data_fifo
------------------------------------------------
              DELAY_LENGTH ------ 30
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFD
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_RS INSTANCE: TX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scrambled_tx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsEncoder INSTANCE: enc
------------------------------------------------
            C_T ------ C_N-C_K
            C_K ------ 11
            C_M ------ 4
            C_N ------ 15
------------------------------------------------
------------------------------------------------
              MODULE: ShiftReg_11s_4b INSTANCE: shift_reg
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: dff4 INSTANCE: Cx
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: GaloisMult19 INSTANCE: GMP
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
        MODULE: RTCU_channel_master INSTANCE: channel_6
------------------------------------------------
        PAYLOAD_LENGTH ------ 40
        TX_ENABLED ------ TRUE
        RX_ENABLED ------ TRUE
        TX_INTERFACE_TYPE ------ SYNC
        RX_INTERFACE_TYPE ------ SYNC
        FAULT_MESSAGE ------ FAULT_MESSAGE
        FAULT_ADDRESS ------ FAULT_ADDRESS
        SCRAMBLING ------ ENABLED
        ERROR_CORRECTION ------ HAMMING
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: bus_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: link_control
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: payload_tx
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: inner_rx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
          MSB_DEST_SUPPORT ------ "FALSE"
          TLAST_PERIOD ------ 1024
          USER_WIDTH ------ 8
          DEST_WIDTH ------ 8
          OUTPUT_DATA_WIDTH ------ 32
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
          MODULE: axi_stream INSTANCE: tx_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
          MODULE: prioritised_fifo INSTANCE: tx_fifo
------------------------------------------------
          FIFO_DEPTH ------ 8
          INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: hp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
            MODULE: dual_read_register_file INSTANCE: lp_memory
------------------------------------------------
            ADDR_WIDTH ------ $clog2(FIFO_DEPTH)
            DATA_WIDTH ------ INPUT_DATA_WIDTH+1
------------------------------------------------
------------------------------------------------
          MODULE: RTCU_m_channel_CU INSTANCE: ControlUnit
------------------------------------------------
          INITIAL_OUTPUT_VALUES ------ '{0,0,450,2000}
          FAULT_MESSAGE ------ FAULT_MESSAGE
          FAULT_ADDRESS ------ FAULT_ADDRESS
------------------------------------------------
------------------------------------------------
            MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
            REGISTERED_BUFFERS ------ 0
            INITIAL_OUTPUT_VALUES ------ INITIAL_OUTPUT_VALUES
            N_TRIGGER_REGISTERS ------ 1
            REGISTERS_WIDTH ------ 32
            ADDRESS_MASK ------ 'h3f
            N_WRITE_REGISTERS ------ 4
            TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
            N_READ_REGISTERS ------ 4
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
              DATA_WIDTH ------ 32
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
              MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
              DATA_WIDTH ------ 32+4
              REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: master_link_manager INSTANCE: manager
------------------------------------------------
          dead ------ 6
          unresponsive ------ 5
          normal ------ 3
          slave_ack ------ 2
          fault ------ 4
          master_ack ------ 1
          idle ------ 0
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: manager
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: acknowledge_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: master_channel_tracker INSTANCE: state_tracker
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: watchdog_timer INSTANCE: watchdog
------------------------------------------------
            COUNTER_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream_combiner_2 INSTANCE: combiner
------------------------------------------------
            MSB_DEST_SUPPORT ------ "FALSE"
            TLAST_PERIOD ------ 1024
            USER_WIDTH ------ 8
            DEST_WIDTH ------ 8
            OUTPUT_DATA_WIDTH ------ 32
            INPUT_DATA_WIDTH ------ PAYLOAD_LENGTH
------------------------------------------------
------------------------------------------------
            MODULE: acknowledge_unit INSTANCE: ack
------------------------------------------------
            N_CHANNELS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_Hamming INSTANCE: TX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          COOLDOWN_LENGHT ------ 25
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scramble_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: Encoder INSTANCE: ecc_encoder
------------------------------------------------
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: generator INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: io_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: serializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 1
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ "TRUE"
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_Hamming INSTANCE: RX_H
------------------------------------------------
          PHYSICAL_MESSAGE_LENGHT ------ PAYLOAD_LENGTH+7
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          PAYLOAD_LENGTH ------ PAYLOAD_LENGTH
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ NEGATIVE
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axis_cdc INSTANCE: deserializer_cdc
------------------------------------------------
            N_STAGES ------ N_STAGES_IN
            DEST_WIDTH ------ 32
            USER_WIDTH ------ 32
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
            N_STAGES_OUT ------ 2
            N_STAGES_IN ------ 2
            CDC_STYLE ------ "HANDSHAKE"
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: xpm_cdc_handshake INSTANCE: op_cdc_dest
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ "MSB"
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 1
            DATA_WIDTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Decoder INSTANCE: rx_error_corrector
------------------------------------------------
            ERROR_ADDR_WIDTH ------ $clog2(MESSAGE_WIDTH)-1
            CHECKSUM_PARTITIONS ------ $rtoi($ceil(MESSAGE_WIDTH/16.0))
            MESSAGE_WIDTH ------ PAYLOAD_WIDTH+PARITY_WIDTH
            N_SYNDROMES ------ 2<<(PARITY_WIDTH-1)
            PARITY_WIDTH ------ 6
            PAYLOAD_WIDTH ------ 40
------------------------------------------------
------------------------------------------------
              MODULE: SyndromeCalculator INSTANCE: SC
------------------------------------------------
              SYNDROME_PARTITIONS ------ 2
              MESSAGE_WIDTH ------ MESSAGE_WIDTH
              PARITY_WIDTH ------ PARITY_WIDTH
              PAYLOAD_WIDTH ------ PAYLOAD_WIDTH
------------------------------------------------
------------------------------------------------
                MODULE: parity INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: syndromes INSTANCE: __init_file__
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: descrambled_stream
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ PAYLOAD_LENGTH
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ PAYLOAD_LENGTH+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: RX_path_RS INSTANCE: RX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ RX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoded_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 1
            FRAMING_SEQUENCE ------ 1
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: cdr INSTANCE: data_recovery
------------------------------------------------
            MESSAGE_LENGTH ------ PHYSICAL_MESSAGE_LENGHT
------------------------------------------------
------------------------------------------------
              MODULE: cdr_clockgen INSTANCE: gen
------------------------------------------------
              DELAY_REF_DIVIDER ------ 3
              SAMPLING_CLOCK_DIVIDER ------ 4
              VCO_MULT ------ 4
              CLOCK_PERIOD ------ 4.000
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: MMCME2_BASE INSTANCE: MMCME2_BASE_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: BUFG INSTANCE: BUFG_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: IDELAYCTRL INSTANCE: IDELAYCTRL_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: cdr_sampler INSTANCE: sampler
------------------------------------------------
              FRAMING_LENGTH ------ 2
              TRANSFER_LENGTH ------ MESSAGE_LENGTH+FRAMING_LENGTH
              MESSAGE_LENGTH ------ MESSAGE_LENGTH
              N_CLK_PHASES ------ 8
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_a_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_a
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: IDELAYE2 INSTANCE: sampler_b_delay
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: ISERDESE2 INSTANCE: sampler_b
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Deserializer INSTANCE: rx_deserializer
------------------------------------------------
            FIRST_BIT ------ LSB
            SAMPLING_EDGE ------ "POSITIVE"
            FRAMING_LENGTH ------ 2
            FRAMING_SEQUENCE ------ 2'b10
            BURST_LENGHT ------ 15
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_deserialized_data
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: decoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsDecoder INSTANCE: DEC
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: PacketReconstructor INSTANCE: rec
------------------------------------------------
              PIPELINE_DELAY ------ 28
              MESSAGE_LENGTH ------ 11
------------------------------------------------
------------------------------------------------
              MODULE: Syndromes INSTANCE: syn_calc
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFS
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK2 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK4 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMultK8 INSTANCE: GM3
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: EuclideanAlgorithm INSTANCE: eucl
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GFDivider INSTANCE: div
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFT
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: dff4 INSTANCE: FFD0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: InverseLUT INSTANCE: Inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                  MODULE: GaloisMult19 INSTANCE: GMq
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda1_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: M_lambda0
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: ChienSearch INSTANCE: chien
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: GM2
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT2
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: Forney INSTANCE: forn
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gm1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT0
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFT1
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: InverseLUT INSTANCE: inv
------------------------------------------------
------------------------------------------------
------------------------------------------------
                MODULE: GaloisMult19 INSTANCE: gme
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: delay_line INSTANCE: data_fifo
------------------------------------------------
              DELAY_LENGTH ------ 30
------------------------------------------------
------------------------------------------------
                MODULE: dff4 INSTANCE: FFD
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_descramble INSTANCE: rx_descrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 1
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
          MODULE: TX_path_RS INSTANCE: TX_RS
------------------------------------------------
          LOGICAL_MESSAGE_LENGHT ------ 40
          PHYSICAL_MESSAGE_LENGHT ------ 48
          INTERFACE_TYPE ------ TX_INTERFACE_TYPE
          FIFO_TYPE ------ XPM
          SCRAMBLING ------ SCRAMBLING
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: scrambled_tx_message
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_in
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: lfsr_scramble INSTANCE: scrambler
------------------------------------------------
            REVERSE ------ 1
            LFSR_CONFIG ------ FIBONACCI
            DATA_WIDTH ------ LOGICAL_MESSAGE_LENGHT
            LFSR_INIT ------ 40'b1
            STYLE ------ "LOOP"
            LFSR_POLY ------ 40'h4000280000
            LFSR_WIDTH ------ LOGICAL_MESSAGE_LENGHT+5
------------------------------------------------
------------------------------------------------
              MODULE: lfsr INSTANCE: lfsr_inst
------------------------------------------------
              DATA_WIDTH ------ DATA_WIDTH
              LFSR_FEED_FORWARD ------ 0
              REVERSE ------ REVERSE
              LFSR_CONFIG ------ LFSR_CONFIG
              STYLE ------ STYLE
              LFSR_POLY ------ LFSR_POLY
              LFSR_WIDTH ------ LFSR_WIDTH
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: RsEncoder INSTANCE: enc
------------------------------------------------
            C_T ------ C_N-C_K
            C_K ------ 11
            C_M ------ 4
            C_N ------ 15
------------------------------------------------
------------------------------------------------
              MODULE: ShiftReg_11s_4b INSTANCE: shift_reg
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: dff4 INSTANCE: Cx
------------------------------------------------
------------------------------------------------
------------------------------------------------
              MODULE: GaloisMult19 INSTANCE: GMP
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axi_stream INSTANCE: buffered_encoder_out
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            DEST_WIDTH ------ 1
            USER_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
            MODULE: axis_fifo_xpm INSTANCE: axis_fifo
------------------------------------------------
            FIFO_DEPTH ------ 16
            USER_WIDTH ------ 1
            DEST_WIDTH ------ 1
            DATA_WIDTH ------ 8
------------------------------------------------
------------------------------------------------
              MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 1
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 1
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
            MODULE: Serializer INSTANCE: transmit_serializer
------------------------------------------------
            FIRST_BIT ------ LSB
            FRAMING_LENGTH ------ 2
            BURST_LENGHT ------ 15
            FRAMING_SEQUENCE ------ 2'b10
            FRAMING_ENABLED ------ TRUE
            DATA_WIDTH ------ 4
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: scope_iref
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: scope_ierr
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: axi_stream INSTANCE: scope_speed
------------------------------------------------
------------------------------------------------
------------------------------------------------
    MODULE: SicDriveMasterScope INSTANCE: scope
------------------------------------------------
    N_TRIGGERS ------ N_TRIGGERS
    DATA_PATH_WIDTH ------ 32
    N_PHASES ------ N_PHASES
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sync_angle_e
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sync_angle_m
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sync_speed_e
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sync_speed_m
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sync_speed_err
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sync_iq
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: i_sensor_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: i_sensor_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: i_sensor_3
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: i_sensor_4
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: i_sensor_5
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: i_sensor_6
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_3
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_4
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_5
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_6
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: err_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: err_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: err_3
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: err_4
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: err_5
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: err_6
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: vset_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: vset_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: vset_3
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: vset_4
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: vset_5
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: vset_6
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sample_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sample_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sample_3
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sample_4
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sample_5
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: sample_6
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_1
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_2
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_3
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_4
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_5
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_6
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_7
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ch_8
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_1_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_2_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_3_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_4_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_5_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: ref_6_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: smp_1_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: smp_2_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: smp_3_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: smp_4_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: smp_5_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream INSTANCE: smp_6_cmp
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: mux_ctrl_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: timebase_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axi_lite INSTANCE: uscope_axi
------------------------------------------------
------------------------------------------------
------------------------------------------------
      MODULE: axil_crossbar_interface INSTANCE: axi_xbar
------------------------------------------------
      STROBE_WIDTH ------ DATA_WIDTH/8
      LGMAXBURST ------ 5
      OPT_LINGER ------ 4
      SLAVE_ADDR ------ '{sdm_address_space::scope_mux,sdm_address_space::scope_timebase,sdm_address_space::scope_control}
      OPT_LOWPOWER ------ 1
      NS ------ 3
      NM ------ 1
      ADDR_WIDTH ------ 32
      SLAVE_MASK ------ '{3{32'h0f00}}
      DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
        MODULE: axilxbar INSTANCE: inner_crossbar
------------------------------------------------
        LGNM ------ (NM>1)?$clog2(NM):1
        NMFULL ------ (NM>1)?(1<<LGNM):1
        LGLINGER ------ (OPT_LINGER>1)?$clog2(OPT_LINGER+1):1
        NM ------ NM
        INTERCONNECT_ERROR ------ 2'b11
        SLAVE_ADDR ------ SLAVE_ADDR
        DATA_WIDTH ------ DATA_WIDTH
        OPT_SKID_INPUT ------ 0
        OPT_LINGER ------ OPT_LINGER
        LGMAXBURST ------ LGMAXBURST
        SLAVE_MASK ------ SLAVE_MASK
        ADDR_WIDTH ------ ADDR_WIDTH
        OPT_BUFFER_DECODER ------ 1
        OPT_LOWPOWER ------ OPT_LOWPOWER
        NS ------ NS
        LGNS ------ (NS>1)?$clog2(NS+1):1
        NSFULL ------ (NS>1)?(1<<LGNS):2
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: wraddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: wskid
------------------------------------------------
          DATA_WIDTH ------ DATA_WIDTH+DATA_WIDTH/8
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: awskid
------------------------------------------------
          DATA_WIDTH ------ ADDR_WIDTH+3
          REGISTER_OUTPUT ------ OPT_SKID_INPUT
------------------------------------------------
------------------------------------------------
          MODULE: address_decoder INSTANCE: rdaddr
------------------------------------------------
          OPT_REGISTERED ------ OPT_BUFFER_DECODER
          SLAVE_MASK ------ SLAVE_MASK
          DW ------ 3
          OPT_NONESEL ------ (!ACCESS_ALLOWED[0])||(SLAVE_MASK[0]!=0)
          ACCESS_ALLOWED ------ -1
          SLAVE_ADDR ------ SLAVE_ADDR
          AW ------ ADDR_WIDTH
          OPT_LOWPOWER ------ 0
          NS ------ NS
------------------------------------------------
------------------------------------------------
      MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
      REGISTERED_BUFFERS ------ 0
      INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
      N_TRIGGER_REGISTERS ------ 1
      REGISTERS_WIDTH ------ 32
      ADDRESS_MASK ------ 'hff
      N_WRITE_REGISTERS ------ 1
      TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
      N_READ_REGISTERS ------ 1
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
        DATA_WIDTH ------ 32
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
        DATA_WIDTH ------ 32+4
        REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
      MODULE: enable_generator INSTANCE: scope_tb
------------------------------------------------
      ADDITIONAL_BITS ------ 32-COUNTER_WIDTH
      EXTERNAL_TIMEBASE_ENABLE ------ 1
      COUNTER_WIDTH ------ 24
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'hf
        N_WRITE_REGISTERS ------ 3
        TRIGGER_REGISTERS_IDX ------ '{N_TRIGGER_REGISTERS{0}}
        N_READ_REGISTERS ------ 3
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: enable_generator_counter INSTANCE: counter
------------------------------------------------
        EXTERNAL_TIMEBASE_ENABLE ------ EXTERNAL_TIMEBASE_ENABLE
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: enable_comparator INSTANCE: comparator_1
------------------------------------------------
        CLOCK_MODE ------ "FALSE"
        COUNTER_WIDTH ------ COUNTER_WIDTH
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_mux_8 INSTANCE: mux_ch_1
------------------------------------------------
      DATA_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_mux_8 INSTANCE: mux_ch_2
------------------------------------------------
      DATA_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_mux_8 INSTANCE: mux_ch_3
------------------------------------------------
      DATA_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_mux_8 INSTANCE: mux_ch_4
------------------------------------------------
      DATA_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_mux_8 INSTANCE: mux_ch_5
------------------------------------------------
      DATA_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
      MODULE: axi_stream_mux_8 INSTANCE: mux_ch_6
------------------------------------------------
      DATA_WIDTH ------ 16
------------------------------------------------
------------------------------------------------
      MODULE: uScope INSTANCE: scope
------------------------------------------------
      CHANNEL_BUFFER_SIZE ------ 1024
      DATA_WIDTH ------ 16
      N_TRIGGERS ------ N_TRIGGERS
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: combined
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: combined_inhibited
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axi_stream INSTANCE: combined_tlast
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: axil_simple_register_cu INSTANCE: CU
------------------------------------------------
        REGISTERED_BUFFERS ------ 0
        INITIAL_OUTPUT_VALUES ------ '{N_WRITE_REGISTERS{0}}
        N_TRIGGER_REGISTERS ------ 1
        REGISTERS_WIDTH ------ 32
        ADDRESS_MASK ------ 'h1f
        N_WRITE_REGISTERS ------ 6
        TRIGGER_REGISTERS_IDX ------ {3}
        N_READ_REGISTERS ------ 6
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_read_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: address_write_buffer
------------------------------------------------
          DATA_WIDTH ------ 32
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
          MODULE: axil_skid_buffer INSTANCE: write_data_buffer
------------------------------------------------
          DATA_WIDTH ------ 32+4
          REGISTER_OUTPUT ------ REGISTERED_BUFFERS
------------------------------------------------
------------------------------------------------
        MODULE: trigger_hub INSTANCE: triggers
------------------------------------------------
        N_TRIGGERS ------ N_TRIGGERS
------------------------------------------------
------------------------------------------------
        MODULE: scope_combiner INSTANCE: combiner
------------------------------------------------
        N_CHANNELS ------ 6
        MSB_DEST_SUPPORT ------ "TRUE"
        USER_WIDTH ------ 8
        DEST_WIDTH ------ 8
        OUTPUT_DATA_WIDTH ------ 32
        INPUT_DATA_WIDTH ------ DATA_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: tlast_generator INSTANCE: tlast_gen
------------------------------------------------
------------------------------------------------
------------------------------------------------
        MODULE: DMA_manager INSTANCE: manager
------------------------------------------------
        C_M00_AXI_DATA_WIDTH ------ 32
        C_M00_AXI_ADDR_WIDTH ------ 32
        DMA_BASE_ADDRESS ------ 'h40400000
------------------------------------------------
------------------------------------------------
          MODULE: DMA_manager_inst INSTANCE: internals
------------------------------------------------
          INIT_WRITE ------ 2'b01
          IDLE ------ 2'b00
          C_M_AXI_DATA_WIDTH ------ C_M00_AXI_DATA_WIDTH
          C_M_AXI_ADDR_WIDTH ------ C_M00_AXI_ADDR_WIDTH
------------------------------------------------
------------------------------------------------
        MODULE: axis_fifo_xpm INSTANCE: scope_fifo
------------------------------------------------
        FIFO_DEPTH ------ 8192
        USER_WIDTH ------ 32
        DEST_WIDTH ------ 16
        DATA_WIDTH ------ 32
------------------------------------------------
------------------------------------------------
          MODULE: xpm_fifo_axis INSTANCE: xpm_fifo_axis_inst
------------------------------------------------
------------------------------------------------
Found enable_generator at address 0
Found enable_generator at address 0
Found enable_generator at address 0
Found gpio at address 0
Found fCore_dma_endpoint at address 0
Found SicDriveMasterScope at address 0
Found enable_generator at address 0
Found uScope at address 0
Found SpiControlUnit at address 0
Found ad2s1210_cu at address 0
Found SpiControlUnit at address 40
Found AdcProcessingControlUnit at address 0
Found AdcProcessingControlUnit at address 0
Found AdcProcessingControlUnit at address 0
Found AdcProcessingControlUnit at address 0
Found AdcProcessingControlUnit at address 0
Found AdcProcessingControlUnit at address 0
Found axis_constant at address 0
Found axis_constant at address 0
Found PID at address 0
Found gpio at address 0
Found gpio at address 0
Found gpio at address 0
Found gpio at address 0
Found gpio at address 0
Found gpio at address 0
Found gpio at address 0
Found multiphase_reference_generator at address 0
Found axis_constant at address 0
Found gpio at address 0
